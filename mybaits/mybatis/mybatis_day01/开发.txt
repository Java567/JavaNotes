第一天：mybatis的入门
        mybatis的概述
        mybatis的环境搭建
        自定义mybatis框架(主要的目的是为了让大家了解mybatis中执行的细节)

第二天：mybatis的基本使用
        mybatis的的单表crud操作
        mybatis的dao编写
        mybatis配置的细节
                 几个标签的使用


第三天：mybatis的深入和多表
        mybatis的的连接池
        mybatis的事物控制及设计的方法
        mybatis的多表查询
                 一对多(多对一)
                 多对多


第四天：mybatis的缓存和注解开发
        mybatis中的加载时机(查询的时机)
        mybatis的一级缓存和二级缓存
        mybatis的注解开发
                   单表CRUD
                   多表查询


--------------------------------------

1、什么是框架？
       它是我们软件开发中的一套解决方案，不同的框架解决的是不同的问题。
       使用框架的好处？
            框架封装了很多细节，使开发者可以使用极简的方式来实现功能，大大提高开发效率。
 
2、三层架构
     表现层：   
            是用于展示数据的
     业务层：
            是处理业务需求
     持久层：
            是和数据库交互的


3、持久层技术解决方案：
        JDBC技术：
                 Connection
                 PreparedStatment
                 ResultSet

        Spring的JdbcTemlate:
                Spring中对jdbc的简单封装

        Apache的DBUtils:
                 它和Spring的JdbcTemlate很像，也是对Jdbc的简单封装

        以上这些都不是框架
                 Jdbc是规范
                 Spring的JdbcTemlate和Apache的DBUtils都只是工具类  


4、mybatis的概述
     mybatis是一个持久层框架，用java编写的
     它封装了jdbc操作的很多细节，使开发者只需要关注sql语句本身，而无需关注注册驱动，创建连接等繁杂过程
     它使用了ORM思想实现了结果集的封装

      ORM: 
           Object Relational Mappging 对象关系映射
           简单的说：
                    就是把数据库表和实体类及实体类的属性对应起来
                    让我们可以操作实体类就可以实现操作数据库表
         
            user          User
            id            userId
            user_name     userName

           今天我们需要做到
                       实体类中的属性和数据库表的字段名称保持一致


5、mybatis的入门
         mybatis的环境搭建：
                  第一步：创建maven工程并导入坐标
                  第二步：创建实体类和dao的接口
                  第三步：创建mybatis的主配置文件  
                                   SqlMapConfig.xml
                  第四步：创建映射配置文件
                                   IUserDao.xml

          环境搭建的注意事项：
                  第一个：创建IUserDao.xml和IUserDao.java时名称一样的是为了跟以前保持一致（我改成了mapper)
                         在mybatis中它把持久层的操作接口名称和映射文件也叫做：mapper
                  第二个：在idea创建目录的时候，它和包是不一样的
                         包在创建时：com.mage.dao是三级结构
                         目录在创建时：com.mage.dao是一级结构
                 第三个：mybatis的映射文件位置必须和dao接口的包结构相同
                 第四个：映射配置文件的,apper标签namespace属性的取值必须是dao接口的全限定类名
                 第五个：映射配置文件的操作配置(select)，id属性的取值必须是dao接口的方法名。                  
         
                 当我们遵从了第三四五点之后，我们在开发中就无需再写dao的实现类。

         
          mybatis的入门案例：
                  1.读取配置文件  
                  2.创建SqlSessionFactory工厂
                  3.使用工厂生产SqlSession对象 
                  4.使用SqlSession创建Dao接口的代理对象           
                  5、使用代理对象(dao)执行方法
                  6.释放资源
   
                  注意事项：
                      不要忘记在映射位置中告知mybatis要封装到哪个实体类中
                      配置的方式：指定实体类的全限定类名
         

――――――――――――――――――――――――――― 
    
      mybatis基于注解发入门案例：
              把IUserDao.xml移除，在dao接口的方法上使用@Select注解，并且指定SQL语句
              同时需要在SqlMapConfig.xml中的mapper配置时，使用class属性指定dao接口的全限定类名

      明确：
            我们在实际开发中，都是越简便越好，所以都是采用不写dao实现类的方式
            不管使用XML还是注解配置
            但是mybatis它是支持写dao实现类的


 自定义mybatis的分析：
           mybatis在使用代理dao的方式实现增删改查时做什么事呢？
                 只有两件事：
                       第一：创建代理对象
                       第二：在代理对象中调用selectList
           
           自定义mybatis能通过入门案例看到的类
                  class Resources
                  class SqlSessionFactoryBuilder
                  interface SqlSessionFactory
                  interface SqlSession              
           